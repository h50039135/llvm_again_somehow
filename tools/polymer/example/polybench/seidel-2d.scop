# [File generated by the OpenScop Library 0.9.2]

<OpenScop>

# =============================================== Global
# Language
C

# Context
CONTEXT
2 4 0 0 0 2
# e/i| P0   P1 |  1  
   1    0    1   -3    ## P1-3 >= 0
   1    1    0   -1    ## P0-1 >= 0

# Parameters are provided
1
<strings>
P0 P1
</strings>

# Number of statements
1

# =============================================== Statement 1
# Number of relations describing the statement:
12

# ----------------------------------------------  1.1 Domain
DOMAIN
6 7 3 0 0 2
# e/i| i0   i1   i2 | P0   P1 |  1  
   1    1    0    0    0    0    0    ## i0 >= 0
   1   -1    0    0    1    0   -1    ## -i0+P0-1 >= 0
   1    0    1    0    0    0   -1    ## i1-1 >= 0
   1    0   -1    0    0    1   -2    ## -i1+P1-2 >= 0
   1    0    0    1    0    0   -1    ## i2-1 >= 0
   1    0    0   -1    0    1   -2    ## -i2+P1-2 >= 0

# ----------------------------------------------  1.2 Scattering
SCATTERING
7 14 7 3 0 2
# e/i| c1   c2   c3   c4   c5   c6   c7 | i0   i1   i2 | P0   P1 |  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    0    0    1    0    0    0    0    0    ## c2 == i0
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    0    0    1    0    0    0    0    ## c4 == i1
   0    0    0    0    0   -1    0    0    0    0    0    0    0    0    ## c5 == 0
   0    0    0    0    0    0   -1    0    0    0    1    0    0    0    ## c6 == i2
   0    0    0    0    0    0    0   -1    0    0    0    0    0    0    ## c7 == 0

# ----------------------------------------------  1.3 Access
READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]| i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0   -1    0    0    0    1    ## [1] == i1-1
   0    0    0    1    0    0   -1    0    0    1    ## [2] == i2-1
   0    1    0    0    0    0    0    0    0   -1    ## Arr == A1

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]| i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0   -1    0    0    0    1    ## [1] == i1-1
   0    0    0    1    0    0   -1    0    0    0    ## [2] == i2
   0    1    0    0    0    0    0    0    0   -1    ## Arr == A1

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]| i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0   -1    0    0    0    1    ## [1] == i1-1
   0    0    0    1    0    0   -1    0    0   -1    ## [2] == i2+1
   0    1    0    0    0    0    0    0    0   -1    ## Arr == A1

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]| i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0   -1    0    0    0    0    ## [1] == i1
   0    0    0    1    0    0   -1    0    0    1    ## [2] == i2-1
   0    1    0    0    0    0    0    0    0   -1    ## Arr == A1

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]| i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0   -1    0    0    0    0    ## [1] == i1
   0    0    0    1    0    0   -1    0    0    0    ## [2] == i2
   0    1    0    0    0    0    0    0    0   -1    ## Arr == A1

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]| i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0   -1    0    0    0    0    ## [1] == i1
   0    0    0    1    0    0   -1    0    0   -1    ## [2] == i2+1
   0    1    0    0    0    0    0    0    0   -1    ## Arr == A1

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]| i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0   -1    0    0    0   -1    ## [1] == i1+1
   0    0    0    1    0    0   -1    0    0    1    ## [2] == i2-1
   0    1    0    0    0    0    0    0    0   -1    ## Arr == A1

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]| i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0   -1    0    0    0   -1    ## [1] == i1+1
   0    0    0    1    0    0   -1    0    0    0    ## [2] == i2
   0    1    0    0    0    0    0    0    0   -1    ## Arr == A1

READ
3 10 3 3 0 2
# e/i| Arr  [1]  [2]| i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0   -1    0    0    0   -1    ## [1] == i1+1
   0    0    0    1    0    0   -1    0    0   -1    ## [2] == i2+1
   0    1    0    0    0    0    0    0    0   -1    ## Arr == A1

WRITE
3 10 3 3 0 2
# e/i| Arr  [1]  [2]| i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0   -1    0    0    0    0    ## [1] == i1
   0    0    0    1    0    0   -1    0    0    0    ## [2] == i2
   0    1    0    0    0    0    0    0    0   -1    ## Arr == A1

# ----------------------------------------------  1.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
3
# List of original iterators
i0 i1 i2
# Statement body expression
S0(i1, i2)
</body>

# =============================================== Extensions
<scatnames>
c1 c2 c3 c4 c5 c6 c7
</scatnames>

<arrays>
# Number of arrays
1
# Mapping array-identifiers/array-names
1 A1
</arrays>

<comment>
kernel_seidel_2d</comment>

</OpenScop>

# [File generated by the OpenScop Library 0.9.2]

<OpenScop>

# =============================================== Global
# Language
C

# Context
CONTEXT
2 4 0 0 0 2
# e/i| P0   P1 |  1  
   1    0    1   -3    ## P1-3 >= 0
   1    1    0   -1    ## P0-1 >= 0

# Parameters are provided
1
<strings>
P0 P1
</strings>

# Number of statements
1

# =============================================== Statement 1
# Number of relations describing the statement:
12

# ----------------------------------------------  1.1 Domain
DOMAIN
12 10 6 0 0 2
# e/i| fk0  fk1  fk2  i0   i1   i2 | P0   P1 |  1  
   1    0    0    0    1    0    0    0    0    0    ## i0 >= 0
   1    0    0    0   -1    0    0    1    0   -1    ## -i0+P0-1 >= 0
   1    0    0    0    0    1    0    0    0   -1    ## i1-1 >= 0
   1    0    0    0    0   -1    0    0    1   -2    ## -i1+P1-2 >= 0
   1    0    0    0    0    0    1    0    0   -1    ## i2-1 >= 0
   1    0    0    0    0    0   -1    0    1   -2    ## -i2+P1-2 >= 0
   1  -32    0    0    1    0    0    0    0    0    ## -32*fk0+i0 >= 0
   1   32    0    0   -1    0    0    0    0   31    ## 32*fk0-i0+31 >= 0
   1    0  -32    0    1    1    0    0    0    0    ## -32*fk1+i0+i1 >= 0
   1    0   32    0   -1   -1    0    0    0   31    ## 32*fk1-i0-i1+31 >= 0
   1    0    0  -32    2    1    1    0    0    0    ## -32*fk2+2*i0+i1+i2 >= 0
   1    0    0   32   -2   -1   -1    0    0   31    ## 32*fk2-2*i0-i1-i2+31 >= 0

# ----------------------------------------------  1.2 Scattering
SCATTERING
6 16 6 6 0 2
# e/i| c1   c2   c3   c4   c5   c6 | fk0  fk1  fk2  i0   i1   i2 | P0   P1 |  1  
   0   -1    0    0    0    0    0    1    0    0    0    0    0    0    0    0    ## c1 == fk0
   0    0   -1    0    0    0    0    0    1    0    0    0    0    0    0    0    ## c2 == fk1
   0    0    0   -1    0    0    0    0    0    1    0    0    0    0    0    0    ## c3 == fk2
   0    0    0    0   -1    0    0    0    0    0    1    0    0    0    0    0    ## c4 == i0
   0    0    0    0    0   -1    0    0    0    0    1    1    0    0    0    0    ## c5 == i0+i1
   0    0    0    0    0    0   -1    0    0    0    2    1    1    0    0    0    ## c6 == 2*i0+i1+i2

# ----------------------------------------------  1.3 Access
READ
3 13 3 6 0 2
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0    0    0    0   -1    0    0    0    1    ## [1] == i1-1
   0    0    0    1    0    0    0    0    0   -1    0    0    1    ## [2] == i2-1
   0    1    0    0    0    0    0    0    0    0    0    0   -1    ## Arr == A1

READ
3 13 3 6 0 2
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0    0    0    0   -1    0    0    0    1    ## [1] == i1-1
   0    0    0    1    0    0    0    0    0   -1    0    0    0    ## [2] == i2
   0    1    0    0    0    0    0    0    0    0    0    0   -1    ## Arr == A1

READ
3 13 3 6 0 2
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0    0    0    0   -1    0    0    0    1    ## [1] == i1-1
   0    0    0    1    0    0    0    0    0   -1    0    0   -1    ## [2] == i2+1
   0    1    0    0    0    0    0    0    0    0    0    0   -1    ## Arr == A1

READ
3 13 3 6 0 2
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0    0    0    0   -1    0    0    0    0    ## [1] == i1
   0    0    0    1    0    0    0    0    0   -1    0    0    1    ## [2] == i2-1
   0    1    0    0    0    0    0    0    0    0    0    0   -1    ## Arr == A1

READ
3 13 3 6 0 2
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0    0    0    0   -1    0    0    0    0    ## [1] == i1
   0    0    0    1    0    0    0    0    0   -1    0    0    0    ## [2] == i2
   0    1    0    0    0    0    0    0    0    0    0    0   -1    ## Arr == A1

READ
3 13 3 6 0 2
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0    0    0    0   -1    0    0    0    0    ## [1] == i1
   0    0    0    1    0    0    0    0    0   -1    0    0   -1    ## [2] == i2+1
   0    1    0    0    0    0    0    0    0    0    0    0   -1    ## Arr == A1

READ
3 13 3 6 0 2
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0    0    0    0   -1    0    0    0   -1    ## [1] == i1+1
   0    0    0    1    0    0    0    0    0   -1    0    0    1    ## [2] == i2-1
   0    1    0    0    0    0    0    0    0    0    0    0   -1    ## Arr == A1

READ
3 13 3 6 0 2
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0    0    0    0   -1    0    0    0   -1    ## [1] == i1+1
   0    0    0    1    0    0    0    0    0   -1    0    0    0    ## [2] == i2
   0    1    0    0    0    0    0    0    0    0    0    0   -1    ## Arr == A1

READ
3 13 3 6 0 2
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0    0    0    0   -1    0    0    0   -1    ## [1] == i1+1
   0    0    0    1    0    0    0    0    0   -1    0    0   -1    ## [2] == i2+1
   0    1    0    0    0    0    0    0    0    0    0    0   -1    ## Arr == A1

WRITE
3 13 3 6 0 2
# e/i| Arr  [1]  [2]| fk0  fk1  fk2  i0   i1   i2 | P0   P1 |  1  
   0    0    1    0    0    0    0    0   -1    0    0    0    0    ## [1] == i1
   0    0    0    1    0    0    0    0    0   -1    0    0    0    ## [2] == i2
   0    1    0    0    0    0    0    0    0    0    0    0   -1    ## Arr == A1

# ----------------------------------------------  1.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
6
# List of original iterators
fk0 fk1 fk2 i0 i1 i2
# Statement body expression
S0(i1, i2)
</body>

# =============================================== Extensions
<arrays>
# Number of arrays
1
# Mapping array-identifiers/array-names
1 A1
</arrays>

<comment>
kernel_seidel_2d</comment>

<scatnames>
t1 t2 t3 t4 t5 t6
</scatnames>

</OpenScop>
