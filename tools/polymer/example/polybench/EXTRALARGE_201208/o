 considering load: %0 = affine.load %arg2[0] : memref<1xf64>
 considering load: %3 = affine.load %arg0[%arg1] : memref<2600xf64>
 considering load: %26 = affine.load %3[%arg4] : memref<2600xf64>
 considering load: %27 = affine.load %1[%arg5, %arg4] : memref<3000x2600xf64>
 considering load: %26 = affine.load %3[%arg3] : memref<2600xf64>
 considering load: %26 = affine.load %4[%arg4] : memref<2600xf64>
 considering load: %27 = affine.load %1[%arg5, %arg4] : memref<3000x2600xf64>
 considering load: %28 = affine.load %3[%arg4] : memref<2600xf64>
 considering load: %26 = affine.load %4[%arg2] : memref<2600xf64>
 considering load: %26 = affine.load %1[%arg2, %arg3] : memref<3000x2600xf64>
 considering load: %27 = affine.load %3[%arg3] : memref<2600xf64>
 considering load: %30 = affine.load %4[%arg3] : memref<2600xf64>
 considering load: %26 = affine.load %2[%arg5, %arg6] : memref<2600x2600xf64>
 considering load: %27 = affine.load %1[%arg7, %arg5] : memref<3000x2600xf64>
 considering load: %28 = affine.load %1[%arg7, %arg6] : memref<3000x2600xf64>
 considering load: %26 = affine.load %2[%arg4, %arg5] : memref<2600x2600xf64>
